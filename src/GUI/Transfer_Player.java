/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;


import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import Logic.SportsLeague;
import Logic.Team;
import Logic.Player;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author salma
 */
public class Transfer_Player extends javax.swing.JFrame {

    /**
     * Creates new form Transfer_Player
     */
       private void loadTeamsFromFile() throws IOException {
      
    DefaultComboBoxModel dmctt = new DefaultComboBoxModel();
    //bind
    //add data
    select_team_comb.setModel(dmctt);
   //populating The combo box
    ArrayList <Team> teams_temp= new SportsLeague().getTeams();
   for (int i=0;i< teams_temp.size();i++) {
    select_team_comb.addItem(teams_temp.get(i).getName());
    
 
   }
       }
       
   private void loadTeamsFromFile2() throws IOException {
    DefaultComboBoxModel dmcpt = new DefaultComboBoxModel();
    //bind
    select_pla_comb.setModel(dmcpt);    

    // Create a single instance of SportsLeague
    SportsLeague sp = new SportsLeague();

    //populating The combo box with team players
    for(int i=0; i<sp.getTeams().size(); i++){
        for(int j=0; j<sp.getTeams().get(i).getPlayers().size(); j++){
            select_pla_comb.addItem(sp.getTeams().get(i).getPlayers().get(j).toString());
        }
    }

    //populating The combo box with unassigned players
    for(int i=0; i<sp.getUnassign_players().size(); i++){
        select_pla_comb.addItem(sp.getUnassign_players().get(i).toString());
    }
}

    

    
    
    public Transfer_Player() throws IOException {
       initComponents();
        loadTeamsFromFile();
        loadTeamsFromFile2();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        Title2 = new javax.swing.JLabel();
        Main_panel2 = new javax.swing.JPanel();
        btn_back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        select_pla_comb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        select_team_comb = new javax.swing.JComboBox<>();
        btn_teansfer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setToolTipText("");

        Title2.setBackground(new java.awt.Color(255, 255, 255));
        Title2.setFont(new java.awt.Font("Gadugi", 0, 90)); // NOI18N
        Title2.setForeground(new java.awt.Color(0, 127, 255));
        Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title2.setText("Transfer Player");
        Title2.setToolTipText("");
        Title2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Main_panel2.setBackground(new java.awt.Color(255, 255, 255));
        Main_panel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 127, 255), 10, true));

        btn_back.setBackground(new java.awt.Color(211, 211, 211));
        btn_back.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        btn_back.setForeground(new java.awt.Color(0, 127, 255));
        btn_back.setText("Go Back");
        btn_back.setToolTipText("");
        btn_back.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 127, 255), 4, true));
        btn_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_back.setPreferredSize(new java.awt.Dimension(231, 51));
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );

        select_pla_comb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_pla_combActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 127, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Choose  Player and Team ");

        jLabel3.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 127, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Select Player :");

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 127, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Select Team :");

        select_team_comb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_team_combActionPerformed(evt);
            }
        });

        btn_teansfer.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        btn_teansfer.setForeground(new java.awt.Color(0, 127, 255));
        btn_teansfer.setText("Transfer");
        btn_teansfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_teansferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Main_panel2Layout = new javax.swing.GroupLayout(Main_panel2);
        Main_panel2.setLayout(Main_panel2Layout);
        Main_panel2Layout.setHorizontalGroup(
            Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Main_panel2Layout.createSequentialGroup()
                .addGroup(Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Main_panel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Main_panel2Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Main_panel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_teansfer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Main_panel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(select_team_comb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(Main_panel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(select_pla_comb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(44, 44, 44)))
                .addGap(123, 123, 123))
            .addGroup(Main_panel2Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(329, Short.MAX_VALUE))
        );
        Main_panel2Layout.setVerticalGroup(
            Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Main_panel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_pla_comb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_team_comb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(Main_panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_teansfer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Title2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(Main_panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Title2, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Main_panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(343, 343, 343))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1154, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        Manage_Players mp= new Manage_Players();
        mp.setVisible(true);
        this.setVisible(false);
        mp.setSize(this.getSize());
    }//GEN-LAST:event_btn_backActionPerformed

    private void select_pla_combActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_pla_combActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_pla_combActionPerformed

    private void select_team_combActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_team_combActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_team_combActionPerformed

    private void btn_teansferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_teansferActionPerformed
           try {
        ArrayList<Team> allTeams = new SportsLeague().getTeams();
        Player selectedPlayer = null;
        Team selectedTeam = null;
        SportsLeague sp = new SportsLeague();

        // Find the selected team
        for (int i = 0; i < sp.getTeams().size(); i++) {
            if (sp.getTeams().get(i).getName().equals(select_team_comb.getSelectedItem().toString())) {
                selectedTeam = sp.getTeams().get(i);
                break;
            }
        }

        // Find the selected player
        for (Team team : allTeams) {
            for (Player player : team.getPlayers()) {
                if (player.toString().equals(select_pla_comb.getSelectedItem().toString())) {
                    selectedPlayer = player;
                    Player newPlay = selectedPlayer;
                    selectedPlayer.getTeam().removePlayer(selectedPlayer);
                    sp.removePlayer(selectedPlayer);

                    newPlay.setIsCaptain(false);
                    newPlay.setTeam(selectedTeam);

                    sp.assignPlayerToTeam(newPlay, selectedTeam);
                    try (FileOutputStream fot = new FileOutputStream("teams.txt");
                         ObjectOutputStream oost = new ObjectOutputStream(fot)) {
                        oost.writeObject(sp.getTeams());
                    } catch (IOException ex) {
                        Logger.getLogger(Edit_Player.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                }
            }
        }

        // Remove player from unassigned players if they were unassigned
        for (int i = 0; i < sp.getUnassign_players().size(); i++) {
            if (sp.getUnassign_players().get(i).toString().equals(select_pla_comb.getSelectedItem().toString())) {
                Player selectedPlayerUnassign = sp.getUnassign_players().get(i);
                Player newPlay = selectedPlayerUnassign;

                sp.remove_unassignPlayer(selectedPlayerUnassign);
                sp.assignPlayerToTeam(newPlay, selectedTeam);

                try (FileOutputStream fot = new FileOutputStream("teams.txt");
                     ObjectOutputStream oost = new ObjectOutputStream(fot)) {
                    oost.writeObject(sp.getTeams());
                } catch (IOException ex) {
                    Logger.getLogger(Edit_Player.class.getName()).log(Level.SEVERE, null, ex);
                }

                try (FileOutputStream fotrp = new FileOutputStream("remain_players.txt");
                     ObjectOutputStream oostep = new ObjectOutputStream(fotrp)) {
                    oostep.writeObject(sp.getUnassign_players());
                } catch (IOException ex) {
                    Logger.getLogger(Edit_Player.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            }
        }

        // Refresh the player combo box after transfer
        DefaultComboBoxModel<String> dmcp = new DefaultComboBoxModel<>();
        select_pla_comb.setModel(dmcp);

        // Populate the combo box with team players
        for (int i = 0; i < sp.getTeams().size(); i++) {
            for (int j = 0; j < sp.getTeams().get(i).getPlayers().size(); j++) {
                select_pla_comb.addItem(sp.getTeams().get(i).getPlayers().get(j).toString());
            }
        }

        // Populate the combo box with unassigned players
        for (int i = 0; i < sp.getUnassign_players().size(); i++) {
            select_pla_comb.addItem(sp.getUnassign_players().get(i).toString());
        }

        // Show success message
        JOptionPane.showMessageDialog(null, "Player transferred successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

    } catch (IOException ex) {
        Logger.getLogger(Transfer_Player.class.getName()).log(Level.SEVERE, null, ex);
    }

          
    }//GEN-LAST:event_btn_teansferActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer_Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer_Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer_Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer_Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Transfer_Player().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Transfer_Player.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Main_panel2;
    private javax.swing.JLabel Title2;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_teansfer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> select_pla_comb;
    private javax.swing.JComboBox<String> select_team_comb;
    // End of variables declaration//GEN-END:variables
}
